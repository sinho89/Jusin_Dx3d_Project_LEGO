/*!
 * \file Engine_enum.h
 * \date 2016/07/12 11:21
 *
 * \author Administrator
 * Contact: user@company.com
 *
 * \brief 
 *
 * TODO: long description
 *
 * \note
*/

#ifndef Engine_enum_h__
#define Engine_enum_h__

namespace ENGINE
{
	enum TEXTURETYPE { TEX_NORMAL, TEX_CUBE };

	enum LAYERID{ LAYER_ENVIRONMENT, LAYER_PLAYER, LAYER_MONSTER, LAYER_NPC, LAYER_GAMELOGIC, LAYER_UI, LAYER_END};

	enum RESOURCETYPE { RESOURCE_STATIC, RESOURCE_DYNAMIC, RESOURCE_END };

	enum ANGLETYPE	{ ANGLE_X, ANGLE_Y, ANGLE_Z, ANGLE_END };

	enum ITERVERTYPE { ITV_X, ITV_Y, ITV_Z, ITV_END };

	enum SCENEID{ SC_LOGO,	SC_STAGE_1,	SC_STAGE_2,	SC_STAGE_3,	SC_END };

	enum PICKINGID{ PICK_X_P, PICK_X_M, PICK_Y_P, PICK_Y_M, PICK_Z_P, PICK_Z_M, PICK_NONE, PICK_END};

	enum SAVEOBJID{ SOBJ_CUBE, SOBJ_R_ARM_UP, SOBJ_R_ARM_DOWN, SOBJ_L_ARM_UP, SOBJ_L_ARM_DOWN, SOBJ_R_LEG, SOBJ_L_LEG, SOBJ_BODY, SOBJ_HEAD, SOBJ_END };

	enum BODYPARTID{ BP_HEAD, BP_BODY, BP_R_ARM_UP, BP_R_ARM_DOWN, BP_L_ARM_UP, BP_L_ARM_DOWN, BP_R_LEG, BP_L_LEG, BP_END};

	enum UNITSTATEID{ US_IDLE, US_MOVE, US_ATTACK, US_HIT, US_END, };

	enum MATRIXID{ MAT_SCALE, MAT_ROT_X, MAT_ROT_Y, MAT_ROT_Z, MAT_TRANS, MAT_AXIS, MAT_PARENT, MAT_END };

	enum UNITID { UNIT_ESILDUR, UNIT_ELOND, UNIT_ORC, UNIT_END };
}

#endif // Engine_enum_h__